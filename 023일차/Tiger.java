/*
new연산자 뒤에 언제나 호출해야 하는 메소드를 생성자 메소드라 한다.
생성자 메소드의 역할은 객체의 인스턴스 생성시 개발자로 하여금 초기화의
기회를 준것이다.
*/

class Tiger{
	String name="호랑이";
	/*
	Tiger 클래스의 생성자를 정의한다.
	일반데이터가 아니라, 적어도 사물을 생성한다는 것은 상당히 복잡하다.
	따라서 객체가 생성되는 시점에 개발자가 원하는 스타일의 객체에 대한
	초기화의 기회를 주기 위해 sun에서는 new 연산자 뒤에 생성자라 불리는
	메소드를 무조건 호출하도록 만들어 놓았다.
	생성자는 new 연산자 뒤에서 호출을 강제하기 때문에 코드내에 존재하지 않을경우
	에러가 발생하게 되어있다. 이 문제를 해결하기 위해 sun에서는 개발자가
	생성자의 초기화 의도가 없는 경우, 디폴트 생성자를 자동으로 넣어준다.
	*/
	
	/*아래는 디폴트 생성자이다.
	public Tiger(){
	
	}*/

	
	public Tiger(){
		System.out.println("디폴트 생성자 호출");
	}
	
	/*
	public String Tiger(){
		System.out.println("디폴트 생성자 호출");
		return "어흥";
	}
	//반환형을 생성자에 두면 안된다. 일반메소드가 되어버린다.
	*/

	public static void main(String[] args){
		Tiger t1= new Tiger();
	}
}
