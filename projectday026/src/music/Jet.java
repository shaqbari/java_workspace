/*기능이 추가되었으므로, 사원들이게 더 많은 기능을 강제하기 위한 객체정의*/

package music;

//날아갈 수 있는 제트엔진 추진기!
public interface Jet{
/*자바언어는 다중상속을 원칙적으로 금지하고 있다
하지만 우리의 현실은 오히려 다중상속적 특징(예: 스마트폰)이 더 많다.
이러한 문제를 해결하기 위해 지원되는 객체가 바로 인터페이스인데,
인터페이스는 클래스는 아니면서, 메소드만을 보유하고 있다.
인터페이스는 추상클래스와 마찬가지로, 추상메소드를 가지고 있으며,
특히 인터페이스가 가진 메소드는 모두 추상메소드 이다.
인터페이스가 더 추상적이다.
(상속이 완전히 새로 변하는 것이라면
인터페이스는 새몸체는 없고 날개만 떠다니는 느낌 날개만 붙일수 있다.)
결론: 클래스가 아니므로, 다중상속을 피해갈 수 있다.
*/

/*
implements도 is a 관계이므로 형변환이 가능하다.
*/
	public void fly();
	//interface에서는 자동으로 abstract가 붙고 추상클래스와 구별위해 abstract를 잘 안쓰는 편이다.
}
